name: Auto Deploy WordPress on Merge or Push to Main

on:
  push:
    branches:
      - main  # Trigger on pushing to main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout Code from the Repository
    - name: Checkout Code
      uses: actions/checkout@v3

    # Step 2: Set up SSH with private key
    - name: Set up SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa  # Use your private key stored in GitHub Secrets
        chmod 600 ~/.ssh/id_rsa
        echo -e "Host ${{ secrets.SERVER_IP }}\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        SERVER_IP: ${{ secrets.SERVER_IP }}

        # Step 3: Get latest commit hash and set the version number
    - name: Set Version Number in wp-config.php
      run: |
        VERSION=$(git rev-parse --short HEAD)  # Get short version of the commit hash
        echo "Setting GITHUB_DEPLOYMENT_SLUG to $VERSION"

        # Update the wp-config.php file with the new version number
        ssh -i ~/.ssh/id_rsa root@${{ secrets.SERVER_IP }} << EOF
          cd /var/www/RouteX || exit  # Change to your WordPress directory
          sed -i "s/define( 'GITHUB_DEPLOYMENT_SLUG', '.*' );/define( 'GITHUB_DEPLOYMENT_SLUG', '$VERSION' );/" wp-config.php  # Correctly update the version
          exit
        EOF
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        SERVER_IP: ${{ secrets.SERVER_IP }}


    # Step 4: Deploy to the Server (Pull the latest changes and deploy)
    - name: Deploy to Server
      run: |
        ssh -i ~/.ssh/id_rsa root@${{ secrets.SERVER_IP }} << 'EOF'
          cd /var/www/RouteX || exit  # Change to your WordPress directory
          git pull origin main  # Pull the latest changes from the GitHub repository
          
          # Optionally flush the cache if the environment variable for cache flushing is set to true
          if [ "${{ secrets.FLUSH_CACHE }}" == "true" ]; then
            wp cache flush  # Clear the cache (if using a WordPress caching plugin)
            echo "Cache has been flushed."
          fi
          
          # Restart Nginx if necessary
          sudo systemctl restart nginx
          exit
        EOF
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        SERVER_IP: ${{ secrets.SERVER_IP }}
        FLUSH_CACHE: ${{ secrets.FLUSH_CACHE }}  # Passing the variable to check if cache should be flushed

    # Optional Step 5: Push Changes Back to GitHub
    - name: Push Changes Back to GitHub (if necessary)
      run: |
        ssh -i ~/.ssh/id_rsa root@${{ secrets.SERVER_IP }} << 'EOF'
          cd /var/www/RouteX || exit  # Change to your WordPress directory
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add .  # Stage all changes made to the server
          git commit -m "Automated commit from server changes" || echo "No changes to commit"
          git push origin main  # Push changes to GitHub if necessary
          exit
        EOF
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        SERVER_IP: ${{ secrets.SERVER_IP }}
